{"ast":null,"code":"import Cookies from 'js-cookie';\nconst BASEAPI = 'http://localhost:5000';\nconst apiFetchPost = async (endpoint, body) => {\n  if (!body.token) {\n    let token = Cookies.get('token');\n  }\n  const res = await fetch(BASEAPI + endpoint, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  });\n  const json = await res.json();\n  if (json.notallowed) {\n    window.location.href = '/signin';\n    return;\n  }\n  return json;\n};\nconst OlxAPI = {\n  login: async (email, password) => {\n    login: async (email, password) => {\n      const json = await apiFetchPost('/user/signin', {\n        email,\n        password\n      });\n      return json;\n    };\n    return {\n      error: 'Funcionalidade em desenvolvimento'\n    };\n  }\n};\nexport default () => OlxAPI;","map":{"version":3,"names":["Cookies","BASEAPI","apiFetchPost","endpoint","body","token","get","res","fetch","method","headers","JSON","stringify","json","notallowed","window","location","href","OlxAPI","login","email","password","error"],"sources":["C:/Curso B7WEB/OLX/frontend/src/helpers/OlxAPI.js"],"sourcesContent":["import Cookies from 'js-cookie';\r\n\r\nconst BASEAPI = 'http://localhost:5000';\r\n\r\nconst apiFetchPost = async (endpoint, body) => {\r\n    if(!body.token){\r\n        let token = Cookies.get('token');\r\n    }\r\n\r\n    const res = await fetch(BASEAPI+endpoint, { \r\n        method: 'POST',\r\n        headers: {\r\n            'Accept' : 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body:JSON.stringify(body)\r\n    });\r\n    const json = await res.json();\r\n\r\n    if(json.notallowed){\r\n        window.location.href = '/signin';\r\n        return;\r\n    }\r\n\r\n    return json;\r\n}\r\n\r\nconst OlxAPI = {\r\n\r\n        login:async (email, password) => {\r\n\r\n            login:async (email, password) => {\r\n                const json = await apiFetchPost(\r\n                    '/user/signin',\r\n                    {email, password}\r\n                );\r\n                return json;\r\n            }\r\n\r\n            return {error: 'Funcionalidade em desenvolvimento'};\r\n        }\r\n};\r\n\r\nexport default () => OlxAPI;"],"mappings":"AAAA,OAAOA,OAAO,MAAM,WAAW;AAE/B,MAAMC,OAAO,GAAG,uBAAuB;AAEvC,MAAMC,YAAY,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,IAAI,KAAK;EAC3C,IAAG,CAACA,IAAI,CAACC,KAAK,EAAC;IACX,IAAIA,KAAK,GAAGL,OAAO,CAACM,GAAG,CAAC,OAAO,CAAC;EACpC;EAEA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACP,OAAO,GAACE,QAAQ,EAAE;IACtCM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,QAAQ,EAAG,kBAAkB;MAC7B,cAAc,EAAE;IACpB,CAAC;IACDN,IAAI,EAACO,IAAI,CAACC,SAAS,CAACR,IAAI;EAC5B,CAAC,CAAC;EACF,MAAMS,IAAI,GAAG,MAAMN,GAAG,CAACM,IAAI,CAAC,CAAC;EAE7B,IAAGA,IAAI,CAACC,UAAU,EAAC;IACfC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,SAAS;IAChC;EACJ;EAEA,OAAOJ,IAAI;AACf,CAAC;AAED,MAAMK,MAAM,GAAG;EAEPC,KAAK,EAAC,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IAE7BF,KAAK,EAAC,OAAOC,KAAK,EAAEC,QAAQ,KAAK;MAC7B,MAAMR,IAAI,GAAG,MAAMX,YAAY,CAC3B,cAAc,EACd;QAACkB,KAAK;QAAEC;MAAQ,CACpB,CAAC;MACD,OAAOR,IAAI;IACf,CAAC;IAED,OAAO;MAACS,KAAK,EAAE;IAAmC,CAAC;EACvD;AACR,CAAC;AAED,eAAe,MAAMJ,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module"}